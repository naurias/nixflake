#+title: Nixflake
[[./repo-assets/introduction.png]]
My personel wayland nixos flake with home-manager
#+DESCRIPTION: My personal wayland nixos flake with home-manager
#+Authot: Nauman Ahmad
* Table of Contents
- [[#introduction][Introduction]]
- [[#main-configuration][Main Configuration]]
- [[#home-manager][Home Manager]]
- [[#installation][Installation]]
- [[#general-usage][General Usage]]
* Introduction
My personal NixOS system using primarily wayland (only requiring xwayland when absolutely necessary).Here is the summary of this setup
- *Home-manager* as user configuration and dotfile management
- *Hyprland* as wyaland compositor
- *Kitty* as terminal emulartor with
- *Rofi* as primary file manager included with image, video thumbnail, pdf and svg previews
- *Thunar* as GUI file manager
- *Nvchad neovim* as terminal editor
- *Doom emacs* as gui editor
- *Rofi-wayland* as application launcher
- *Firefox* as primary browser
- *Dunst* as notification daemon

* Main Configuration
- [[./configuration.nix][configuration.nix]] Is my main configuration file that contain imported module from [[./modules][modules]] directory having connfiguration spplit into modlue for different tasks such as packages, services and so on.
- [[./hardware-configuration.nix][hardware-configuration.nix]] is my hardware info and declarative file system, b asics of which are as
  - BTRFS as root filesystem with root, home, var and nix subvolumes
  - 8 GB swap partition
  - BTRFS with enabled options of zstd-compression, ssd and space_cache=v2
- [[./flake.nix][flake.nix]] is my NixOS flake with home-manager enabled. Both nixpkgs and home-manager are enabled on unstable channel
* Home Manager
- My home manager declarative configuration having [[./home.nix][home.nix]] as my main home configuration
- [[./assets][assets]] directory contains dotfiles/configuration files for installed packages such as waybar, hyprland and so on. Some of the are declarative while others are simple symlinked sources to .config of user as configured in home.nix
** Themes & Fonts
Theming is done declaratively as per [[./home.nix][home.nix]] file having following components
- *Adwaita Dark* as gtk theme
- *Vimix Cursosrs* as cursor them
- *Papirus* as icon theme
- *Adwaita* as qt5 and qt6 them (qt6 is generally preferred)
- *Fonts* are sourced declaratively from assets directory into ,local/share/fonts of user. Patched fonts are included

* Installation
You can install this on preinstalled system *This will delete current system's configuration* or from live iso. Considereing you have live media prepare and are booted into it following are the installation steps
** Partitioning
This configuration use
- BTRFS as root file system with zstd compression
- FAT 32 as efi partion
- Grub as Boot loader
- 8 GB Swap partion
Make sure you have 3 partions. You can use any partition manager i.e cfdisk, gparted, fdisk. I personally use cfdisk
- an efi partion (sda1)
- a linux filesystem (sda2)
- a swap partition (sda3)

Partition as follows
Your root partition
#+BEGIN_SRC shell
mkfs.btrfs /dev/sda2
#+END_SRC
Your efi partition
#+begin_src shell
mkfs.vfat -F32 /dev/sda1
#+end_src
Your sawp partition
#+begin_src shell
mkswap /dev/sda3
#+end_src
** Mount
 After partitioning mount them as follows
 Your root partition
  #+begin_src shell
mount /dev/sda2 /mnt
  #+end_src
 mounting the root partion to make btrfs subvolumes so we can make use of btrfs option
  #+begin_src shell
  cd /mnt
  #+end_src
 create root subvolume
  #+begin_src shell
  btrfs subvolume create @
  #+end_src
 create home subvolume
  #+begin_src shell
  btrfs subvolume create @home
  #+end_src
  creat var
  #+begin_src shell
  btrfs subvolume create @var
  #+end_src
  after creating these three subvolumes in the /mnt directory you can confirm them by listing (ls) the contetns of /mnt directory. It should have three folders named "@", "@home" and "@var"
 unmount /mnt
  #+begin_src shell
umount /mnt
  #+end_src
 mount the rooot partition again (at subvolume @) but this time using btrfs option. My personal ones are
  #+begin_src shell
mount -o defaults,noatime,space_cache=v2,discard=async,compress=zstd,ssd,subvol=@ /dev/sda2 /mnt
  #+end_src
 create the folders in mounted directory
  #+begin_src shell
mkdir -p /mnt/{boot,home,var}
  #+end_src
 mount root partion
  #+begin_src shell
mount /dev/sda1 /mnt/boot
  #+end_src
  turn the swap partition on
  #+begin_src shell
swapon /dev/sda3
  #+end_src

** Generating nixos config
After mounting generate the default nixos configuration
#+begin_src
nixos-generate-config --root /mnt
#+end_src
After generting the default config you'll have two files name configuration.nix and hardware-configuration.nix in /mnt/etc/nixos
** Installing the system
There are two approaches you can take from here to install this system
- Install nixos as one usually does. Follow [[https;//nixos.wiki/NixOS_Installation_Guide][this]] link for detailed instruction
- Use flake directly from live iso

*** From installed system
Install the system and follow the guide as explained in [[#from-live-iso][From Live Iso]] section
*** From Live Iso
Make sure you have git installed (or any other method) to clone this github repository
#+begin_src
git clone https://github.com/naurias/nixflake.git
#+end_src
enter the repo directory
#+begin_src
cd nixflake
#+end_src
copy your main hardware configuration paste it in this directory overwriting the one in repo
#+begin_src
cp /mnt/etc/nixos/hardware-configuration.nix .
#+end_src
or if you're in preinstalled system
#+begin_src
cp /etc/nixos/hardware-configuration.nix .
#+end_src
enable flakes either temporarily or in configuration. Refer to [[https://nixos.wiki/wiki/Flakes][this]] link on how to enable flakes

In the repo install the system as follows (with flakes enabled in config)
#+begin_src
nixos-rebuild switch --flake .#nixreaper
#+end_src
or with flakes not enabled in main configuration
#+begin_src
nixos-rebuild switch --flake .#nixreaper --experimental-features 'nix-command flakes'
#+end_src
Reboot the system and yo'll have exact same system installed

* General Usage
Following are the keybindings for general workflow usage,
| Keybindings            | What it Does                                       |
|------------------------+----------------------------------------------------|
| *General Usage*        |                                                    |
|------------------------+----------------------------------------------------|
| SUPER+Return           | Opens kitty terminal                               |
| SUPER+D                | Opens rofi application launcher                    |
| SUPER+W                | Close the focused window                           |
| SUPER+SHIFT+Q          | Exit hyprland (to tty)                             |
| SUPER+F                | Enter fullscreen                                   |
| SUPER+S                | Make window float                                  |
| SUPER+M                | Enter monocle mode                                 |
| SUPER+SHFIT+F          | Enter fake fullscreen mode                         |
| *Navigation*           |                                                    |
|------------------------+----------------------------------------------------|
| SUPER+up               | Move focus to upper window                         |
| SUPER+down             | Move focus to lower window                         |
| SUPER+left             | Move focus to leff window                          |
| SUPER+right            | Move focus to right window                         |
| SUPER+SHIFT+arrow-keys | Move window itself and focus at respctive location |
| *Workspaces*           |                                                    |
|------------------------+----------------------------------------------------|
| SUPER+1-9              | Move to workspaces 1-9                             |
| SUPER+V                | Enter Scratchpad special window                    |
| SUPER+SHIFT+V          | Move window to scrathpad                           |


